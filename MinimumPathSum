class Solution {
    public int minPathSum(int[][] grid) {
        int rowLen = grid.length;
        int colLen = grid[0].length;
        int[][] dp = new int [rowLen][colLen];
        for (int row = 0; row < rowLen; ++row) {
            for (int col = 0; col < colLen; ++col) {
                if (row == 0 && col == 0) {
                    dp[row][col] = grid[row][col];
                }
                else if (row == 0) {
                    dp[row][col] = dp[row][col-1] + grid[row][col];
                }
                else if (col == 0) {
                    dp[row][col] = dp[row-1][col] + grid[row][col];
                }
                else {
                    dp[row][col] = grid[row][col] + Math.min(dp[row-1][col], dp[row][col-1]);
                }
            }
        }
//         for (int row = 0; row < rowLen; ++row) {
//             for (int col = 0; col < colLen; ++col) {
//                 System.out.print(dp[row][col] + " ");
//             }
//             System.out.println();
//         }
        
        return dp[rowLen-1][colLen-1];
    }
}
