class Solution {
    public int[][] merge(int[][] intervals) {
        if (intervals.length == 0 || intervals == null) {
            return intervals;
        }
        Arrays.sort(intervals, (a,b) -> a[0] - b[0]);
        ArrayList<int[]> list = new ArrayList<>();
        list.add(intervals[0]);
        for (int i = 1; i < intervals.length; ++i) {
            int [] prev = list.get(list.size()-1);
            if (prev[1] >= intervals[i][0]) {
                if (prev[1] < intervals[i][1]) {
                    list.set(list.size()-1, new int [] {prev[0], intervals[i][1]});
                }       
            }
            else {
                list.add(new int [] {intervals[i][0],intervals[i][1]});
            }
        }
        int [][] mergedIntervals = new int[list.size()][2];
        for (int i = 0; i < mergedIntervals.length; ++i) {
            mergedIntervals[i][0] = list.get(i)[0];
            mergedIntervals[i][1] = list.get(i)[1];
        }
        return mergedIntervals;
    }
}
